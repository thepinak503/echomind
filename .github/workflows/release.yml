name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: echomind
            asset_name: echomind-linux-amd64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            artifact_name: echomind
            asset_name: echomind-linux-amd64-musl
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: echomind.exe
            asset_name: echomind-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: echomind
            asset_name: echomind-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: echomind
            asset_name: echomind-macos-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install musl tools
      if: matrix.target == 'x86_64-unknown-linux-musl'
      run: sudo apt-get install -y musl-tools

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
